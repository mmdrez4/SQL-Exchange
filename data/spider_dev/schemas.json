{
    "concert_singer": "\n    PRAGMA foreign_keys = ON;\n    CREATE TABLE \"stadium\" (\n        \"Stadium_ID\" int,\n        \"Location\" text,\n        \"Name\" text,\n        \"Capacity\" int,\n        \"Highest\" int,\n        \"Lowest\" int,\n        \"Average\" int,\n        PRIMARY KEY (\"Stadium_ID\")\n    );\n    CREATE TABLE \"singer\" (\n        \"Singer_ID\" int,\n        \"Name\" text,\n        \"Country\" text,\n        \"Song_Name\" text,\n        \"Song_release_year\" text,\n        \"Age\" int,\n        \"Is_male\" bool,\n        PRIMARY KEY (\"Singer_ID\")\n    );\n    CREATE TABLE \"concert\" (\n        \"concert_ID\" int,\n        \"concert_Name\" text,\n        \"Theme\" text,\n        \"Stadium_ID\" text,\n        \"Year\" text,\n        PRIMARY KEY (\"concert_ID\"),\n        FOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n    );\n    CREATE TABLE \"singer_in_concert\" (\n        \"concert_ID\" int,\n        \"Singer_ID\" text,\n        PRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\n        FOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\n        FOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n    );\n",
    "pets_1": "\n    create table Student (\n        StuID    \tINTEGER PRIMARY KEY,\n        LName\t\tVARCHAR(12),\n        Fname\t\tVARCHAR(12),\n        Age\t\tINTEGER,\n        Sex\t\tVARCHAR(1),\n        Major\t\tINTEGER,\n        Advisor\t\tINTEGER,\n        city_code\tVARCHAR(3)\n    );\n\n    create table Has_Pet (\n        StuID\t\tINTEGER,\n        PetID\t\tINTEGER,\n        FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n        FOREIGN KEY(StuID) REFERENCES Student(StuID)\n    );\n\n    create table Pets (\n        PetID\t\tINTEGER PRIMARY KEY,\n        PetType\t\tVARCHAR(20),\n        pet_age INTEGER,\n        weight REAL\n    );\n",
    "car_1": "\n    CREATE TABLE \"continents\" ( \n        \"ContId\" INTEGER PRIMARY KEY, \n        \"Continent\" TEXT \n    );\n\n    CREATE TABLE \"countries\" (\n        \"CountryId\" INTEGER PRIMARY KEY, \n        \"CountryName\" TEXT, \n        \"Continent\" INTEGER,\n        FOREIGN KEY (Continent) REFERENCES continents(ContId)\n    );\n\n\n    CREATE TABLE \"car_makers\" ( \n        \"Id\" INTEGER PRIMARY KEY, \n        \"Maker\" TEXT, \n        \"FullName\" TEXT, \n        \"Country\" TEXT,\n        FOREIGN KEY (Country) REFERENCES countries(CountryId)\n    );\n\n\n    CREATE TABLE \"model_list\" ( \n        \"ModelId\" INTEGER PRIMARY KEY, \n        \"Maker\" INTEGER, \n        \"Model\" TEXT UNIQUE,\n        FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n\n    );\n\n\n\n    CREATE TABLE \"car_names\" ( \n        \"MakeId\" INTEGER PRIMARY KEY, \n        \"Model\" TEXT, \n        \"Make\" TEXT,\n        FOREIGN KEY (Model) REFERENCES model_list (Model)\n    );\n\n    CREATE TABLE \"cars_data\" (\n        \"Id\" INTEGER PRIMARY KEY, \n        \"MPG\" TEXT, \n        \"Cylinders\" INTEGER, \n        \"Edispl\" REAL, \n        \"Horsepower\" TEXT, \n        \"Weight\" INTEGER, \n        \"Accelerate\" REAL, \n        \"Year\" INTEGER,\n        FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n    );\n\n",
    "flight_2": "\n    CREATE TABLE 'airlines' (\n        uid INTEGER PRIMARY KEY, \n        Airline TEXT, \n        Abbreviation TEXT, \n        Country TEXT\n    );\n    CREATE TABLE 'airports' (\n        City TEXT, \n        AirportCode TEXT PRIMARY KEY, \n        AirportName TEXT, \n        Country TEXT, \n        CountryAbbrev TEXT\n    );\n    CREATE TABLE 'flights' (\n        Airline INTEGER, \n        FlightNo INTEGER, \n        SourceAirport TEXT, \n        DestAirport TEXT, \n        PRIMARY KEY(Airline, FlightNo),\n        FOREIGN KEY (SourceAirport) REFERENCES airports(AirportCode),\n        FOREIGN KEY (DestAirport) REFERENCES airports(AirportCode)\n    );\n",
    "employee_hire_evaluation": "\n    PRAGMA foreign_keys = ON;\n\n    CREATE TABLE \"employee\" (\n    \"Employee_ID\" int,\n    \"Name\" text,\n    \"Age\" int,\n    \"City\" text,\n    PRIMARY KEY (\"Employee_ID\")\n    );\n\n    CREATE TABLE \"shop\" (\n    \"Shop_ID\" int,\n    \"Name\" text,\n    \"Location\" text,\n    \"District\" text,\n    \"Number_products\" int,\n    \"Manager_name\" text,\n    PRIMARY KEY (\"Shop_ID\")\n    );\n\n    CREATE TABLE \"hiring\" (\n    \"Shop_ID\" int,\n    \"Employee_ID\" int,\n    \"Start_from\" text,\n    \"Is_full_time\" bool,\n    PRIMARY KEY (\"Employee_ID\"),\n    FOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\n    FOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n    );\n\n    CREATE TABLE \"evaluation\" (\n    \"Employee_ID\" text,\n    \"Year_awarded\" text,\n    \"Bonus\" real,\n    PRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\n    FOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n    );\n",
    "cre_Doc_Template_Mgt": "\n    PRAGMA foreign_keys = ON;\n    CREATE TABLE Ref_Template_Types (\n    Template_Type_Code CHAR(15) NOT NULL,\n    Template_Type_Description VARCHAR(255) NOT NULL,\n    PRIMARY KEY (Template_Type_Code)\n    );\n    CREATE TABLE Templates (\n    Template_ID INTEGER NOT NULL,\n    Version_Number INTEGER NOT NULL,\n    Template_Type_Code CHAR(15) NOT NULL,\n    Date_Effective_From DATETIME,\n    Date_Effective_To DATETIME,\n    Template_Details VARCHAR(255) NOT NULL,\n    PRIMARY KEY (Template_ID),\n    FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n    );\n    CREATE TABLE Documents (\n    Document_ID INTEGER NOT NULL,\n    Template_ID INTEGER,\n    Document_Name VARCHAR(255),\n    Document_Description VARCHAR(255),\n    Other_Details VARCHAR(255),\n    PRIMARY KEY (Document_ID),\n    FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n    );\n    CREATE TABLE Paragraphs (\n    Paragraph_ID INTEGER NOT NULL,\n    Document_ID INTEGER NOT NULL,\n    Paragraph_Text VARCHAR(255),\n    Other_Details VARCHAR(255),\n    PRIMARY KEY (Paragraph_ID),\n    FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n    );\n",
    "course_teach": "\n    PRAGMA foreign_keys = ON;\n\n    CREATE TABLE \"course\" (\n    \"Course_ID\" int,\n    \"Staring_Date\" text,\n    \"Course\" text,\n    PRIMARY KEY (\"Course_ID\")\n    );\n\n    CREATE TABLE \"teacher\" (\n    \"Teacher_ID\" int,\n    \"Name\" text,\n    \"Age\" text,\n    \"Hometown\" text,\n    PRIMARY KEY (\"Teacher_ID\")\n    );\n\n    CREATE TABLE \"course_arrange\" (\n    \"Course_ID\" int,\n    \"Teacher_ID\" int,\n    \"Grade\" int,\n    PRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\n    FOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\n    FOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n    );\n",
    "museum_visit": "\n    PRAGMA foreign_keys = ON;\n\n    CREATE TABLE \"museum\" (\n    \"Museum_ID\" int,\n    \"Name\" text,\n    \"Num_of_Staff\" int,\n    \"Open_Year\" text,\n    PRIMARY KEY (\"Museum_ID\")\n    );\n\n    CREATE TABLE \"visitor\" (\n    \"ID\" int,\n    \"Name\" text,\n    \"Level_of_membership\" int,\n    \"Age\" int,\n    PRIMARY KEY (\"ID\")\n    );\n\n    CREATE TABLE \"visit\" (\n    \"Museum_ID\" int,\n    \"visitor_ID\" text,\n    \"Num_of_Ticket\" int,\n    \"Total_spent\" real,\n    PRIMARY KEY (\"Museum_ID\",\"visitor_ID\"),\n    FOREIGN KEY (\"Museum_ID\") REFERENCES `museum`(\"Museum_ID\"),\n    FOREIGN KEY (\"visitor_ID\") REFERENCES `visitor`(\"ID\")\n    );\n",
    "wta_1": "\n    CRloser_rank_pointsEATE TABLE players(\n        \"player_id\" INT PRIMARY KEY,\n        \"first_name\" TEXT,\n        \"last_name\" TEXT,\n        \"hand\" TEXT,\n        \"birth_date\" DATE,\n        \"country_code\" TEXT\n    );\n    CREATE TABLE matches(\n    \"best_of\" INT,\n    \"draw_size\" INT,\n    \"loser_age\" FLOAT,\n    \"loser_entry\" TEXT,\n    \"loser_hand\" TEXT,\n    \"loser_ht\" INT,\n    \"loser_id\" INT,\n    \"loser_ioc\" TEXT,\n    \"loser_name\" TEXT,\n    \"loser_rank\" INT,\n    \"loser_rank_points\" INT,\n    \"loser_seed\" INT,\n    \"match_num\" INT,\n    \"minutes\" INT,\n    \"round\" TEXT,\n    \"score\" TEXT,\n    \"surface\" TEXT,\n    \"tourney_date\" DATE,\n    \"tourney_id\" TEXT,\n    \"tourney_level\" TEXT,\n    \"tourney_name\" TEXT,\n    \"winner_age\" FLOAT,\n    \"winner_entry\" TEXT,\n    \"winner_hand\" TEXT,\n    \"winner_ht\" INT,\n    \"winner_id\" INT,\n    \"winner_ioc\" TEXT,\n    \"winner_name\" TEXT,\n    \"winner_rank\" INT,\n    \"winner_rank_points\" INT,\n    \"winner_seed\" INT,\n    \"year\" INT,\n    FOREIGN KEY(loser_id) REFERENCES players(player_id),\n    FOREIGN KEY(winner_id) REFERENCES players(player_id)\n    );\n\n    CREATE TABLE qualifying_matches(\n    \"best_of\" INT,\n    \"draw_size\" INT,\n    \"l_1stIn\" TEXT,\n    \"l_1stWon\" TEXT,\n    \"l_2ndWon\" TEXT,\n    \"l_SvGms\" TEXT,\n    \"l_ace\" TEXT,\n    \"l_bpFaced\" TEXT,\n    \"l_bpSaved\" TEXT,\n    \"l_df\" TEXT,\n    \"l_svpt\" TEXT,\n    \"loser_age\" FLOAT,\n    \"loser_entry\" TEXT,\n    \"loser_hand\" TEXT,\n    \"loser_ht\" INT,\n    \"loser_id\" INT,\n    \"loser_ioc\" TEXT,\n    \"loser_name\" TEXT,\n    \"loser_rank\" INT,\n    \"loser_rank_points\" INT,\n    \"loser_seed\" INT,\n    \"match_num\" INT,\n    \"minutes\" INT,\n    \"round\" TEXT,\n    \"score\" TEXT,\n    \"surface\" TEXT,\n    \"tourney_date\" DATE,\n    \"tourney_id\" TEXT,\n    \"tourney_level\" TEXT,\n    \"tourney_name\" TEXT,\n    \"w_1stIn\" TEXT,\n    \"w_1stWon\" TEXT,\n    \"w_2ndWon\" TEXT,\n    \"w_SvGms\" TEXT,\n    \"w_ace\" TEXT,\n    \"w_bpFaced\" TEXT,\n    \"w_bpSaved\" TEXT,\n    \"w_df\" TEXT,\n    \"w_svpt\" TEXT,\n    \"winner_age\" FLOAT,\n    \"winner_entry\" TEXT,\n    \"winner_hand\" TEXT,\n    \"winner_ht\" INT,\n    \"winner_id\" INT,\n    \"winner_ioc\" TEXT,\n    \"winner_name\" TEXT,\n    \"winner_rank\" INT,\n    \"winner_rank_points\" INT,\n    \"winner_seed\" INT,\n    \"year\" INT,\n    FOREIGN KEY(loser_id) REFERENCES players(player_id),\n    FOREIGN KEY(winner_id) REFERENCES players(player_id)\n    );\n\n    CREATE TABLE rankings(\n    \"ranking_date\" DATE,\n    \"ranking\" INT,\n    \"player_id\" INT,\n    \"ranking_points\" INT,\n    \"tours\" INT,\n    FOREIGN KEY(player_id) REFERENCES players(player_id)\n    );\n",
    "battle_death": "\n    PRAGMA foreign_keys = ON;\n    CREATE TABLE \"battle\" (\n    \"id\" int,\n    \"name\" text,\n    \"date\" text,\n    \"bulgarian_commander\" text,\n    \"latin_commander\" text,\n    \"result\" text,\n    primary key(\"id\")\n    );\n\n    CREATE TABLE \"ship\" (\n    \"lost_in_battle\" int,\n    \"id\" int,\n    \"name\" text,\n    \"tonnage\" text,\n    \"ship_type\" text,\n    \"location\" text,\n    \"disposition_of_ship\" text,\n    primary key(\"id\"),\n    foreign key (`lost_in_battle`) references `battle`(\"id\") \n    );\n\n\n    CREATE TABLE \"death\" (\n    \"caused_by_ship_id\" int,\n    \"id\" int,\n    \"note\" text,\n    \"killed\" int,\n    \"injured\" int,\n    primary key(\"id\"),\n    foreign key (\"caused_by_ship_id\") references `ship`(\"id\") \n    );\n",
    "student_transcripts_tracking": "\n    PRAGMA foreign_keys = ON;\n    CREATE TABLE `Addresses` (\n    `address_id` INTEGER PRIMARY KEY,\n    `line_1` VARCHAR(255),\n    `line_2` VARCHAR(255),\n    `line_3` VARCHAR(255),\n    `city` VARCHAR(255),\n    `zip_postcode` VARCHAR(20),\n    `state_province_county` VARCHAR(255),\n    `country` VARCHAR(255),\n    `other_address_details` VARCHAR(255)\n    );\n    CREATE TABLE `Courses` (\n    `course_id` INTEGER PRIMARY KEY,\n    `course_name` VARCHAR(255),\n    `course_description` VARCHAR(255),\n    `other_details` VARCHAR(255)\n    );\n    \n    CREATE TABLE `Departments` (\n    `department_id` INTEGER PRIMARY KEY,\n    `department_name` VARCHAR(255),\n    `department_description` VARCHAR(255),\n    `other_details` VARCHAR(255)\n    );\n\n    CREATE TABLE `Degree_Programs` (\n    `degree_program_id` INTEGER PRIMARY KEY,\n    `department_id` INTEGER NOT NULL,\n    `degree_summary_name` VARCHAR(255),\n    `degree_summary_description` VARCHAR(255),\n    `other_details` VARCHAR(255),\n    FOREIGN KEY (`department_id` ) REFERENCES `Departments`(`department_id` )\n    );\n\n    CREATE TABLE `Sections` (\n    `section_id` INTEGER PRIMARY KEY,\n    `course_id` INTEGER NOT NULL,\n    `section_name` VARCHAR(255),\n    `section_description` VARCHAR(255),\n    `other_details` VARCHAR(255),\n    FOREIGN KEY (`course_id` ) REFERENCES `Courses`(`course_id` )\n    );\n    \n    CREATE TABLE `Semesters` (\n    `semester_id` INTEGER PRIMARY KEY,\n    `semester_name` VARCHAR(255),\n    `semester_description` VARCHAR(255),\n    `other_details` VARCHAR(255)\n    );\n\n    CREATE TABLE `Students` (\n    `student_id` INTEGER PRIMARY KEY,\n    `current_address_id` INTEGER NOT NULL,\n    `permanent_address_id` INTEGER NOT NULL,\n    `first_name` VARCHAR(80),\n    `middle_name` VARCHAR(40),\n    `last_name` VARCHAR(40),\n    `cell_mobile_number` VARCHAR(40),\n    `email_address` VARCHAR(40),\n    `ssn` VARCHAR(40),\n    `date_first_registered` DATETIME,\n    `date_left` DATETIME,\n    `other_student_details` VARCHAR(255),\n    FOREIGN KEY (`current_address_id` ) REFERENCES `Addresses`(`address_id` ),\n    FOREIGN KEY (`permanent_address_id` ) REFERENCES `Addresses`(`address_id` )\n    );\n\n    CREATE TABLE `Student_Enrolment` (\n    `student_enrolment_id` INTEGER PRIMARY KEY,\n    `degree_program_id` INTEGER NOT NULL,\n    `semester_id` INTEGER NOT NULL,\n    `student_id` INTEGER NOT NULL,\n    `other_details` VARCHAR(255),\n    FOREIGN KEY (`degree_program_id` ) REFERENCES `Degree_Programs`(`degree_program_id` ),\n    FOREIGN KEY (`semester_id` ) REFERENCES `Semesters`(`semester_id` ),\n    FOREIGN KEY (`student_id` ) REFERENCES `Students`(`student_id` )\n    );\n\n    CREATE TABLE `Student_Enrolment_Courses` (\n    `student_course_id` INTEGER PRIMARY KEY,\n    `course_id` INTEGER NOT NULL,\n    `student_enrolment_id` INTEGER NOT NULL,\n    FOREIGN KEY (`course_id` ) REFERENCES `Courses`(`course_id` ),\n    FOREIGN KEY (`student_enrolment_id` ) REFERENCES `Student_Enrolment`(`student_enrolment_id` )\n    );\n\n    CREATE TABLE `Transcripts` (\n    `transcript_id` INTEGER PRIMARY KEY,\n    `transcript_date` DATETIME,\n    `other_details` VARCHAR(255)\n    );\n\n    CREATE TABLE `Transcript_Contents` (\n    `student_course_id` INTEGER NOT NULL,\n    `transcript_id` INTEGER NOT NULL,\n    FOREIGN KEY (`student_course_id` ) REFERENCES `Student_Enrolment_Courses`(`student_course_id` ),\n    FOREIGN KEY (`transcript_id` ) REFERENCES `Transcripts`(`transcript_id` )\n    );\n",
    "tvshow": " \n    PRAGMA foreign_keys=ON;\n\n    CREATE TABLE IF NOT EXISTS \"TV_Channel\" (\n    \"id\" text,\n    \"series_name\" text,\n    \"Country\" text,\n    \"Language\" text,\n    \"Content\" text,\n    \"Pixel_aspect_ratio_PAR\" text,\n    \"Hight_definition_TV\" text,\n    \"Pay_per_view_PPV\" text,\n    \"Package_Option\" text,\n    PRIMARY KEY (\"id\")\n    );\n\n    CREATE TABLE IF NOT EXISTS \"TV_series\" (\n    \"id\" real,\n    \"Episode\" text,\n    \"Air_Date\" text,\n    \"Rating\" text,\n    \"Share\" real,\n    \"18_49_Rating_Share\" text,\n    \"Viewers_m\" text,\n    \"Weekly_Rank\" real,\n    \"Channel\" text,\n    PRIMARY KEY (\"id\"),\n    FOREIGN KEY (`Channel`) REFERENCES `TV_Channel`(`id`)\n    );\n\n    CREATE TABLE IF NOT EXISTS \"Cartoon\" (\n    \"id\" real,\n    \"Title\" text,\n    \"Directed_by\" text,\n    \"Written_by\" text,\n    \"Original_air_date\" text,\n    \"Production_code\" real,\n    \"Channel\" text,\n    PRIMARY KEY (\"id\"),\n    FOREIGN KEY (`Channel`) REFERENCES `TV_Channel`(`id`)\n    );\n",
    "poker_player": "\n    PRAGMA foreign_keys = ON;\n\n    CREATE TABLE \"poker_player\" (\n    \"Poker_Player_ID\" int,\n    \"People_ID\" int,\n    \"Final_Table_Made\" real,\n    \"Best_Finish\" real,\n    \"Money_Rank\" real,\n    \"Earnings\" real,\n    PRIMARY KEY (\"Poker_Player_ID\"),\n    FOREIGN KEY (\"People_ID\") REFERENCES `people`(\"People_ID\")\n    );\n\n    CREATE TABLE \"people\" (\n    \"People_ID\" int,\n    \"Nationality\" text,\n    \"Name\" text,\n    \"Birth_Date\" text,\n    \"Height\" real,\n    PRIMARY KEY (\"People_ID\")\n    );\n",
    "voter_1": "\n    CREATE TABLE `AREA_CODE_STATE` (\n    `area_code` integer NOT NULL\n    ,  `state` varchar(2) NOT NULL\n    ,  PRIMARY KEY (`area_code`)\n    );\n    CREATE TABLE `CONTESTANTS` (\n    `contestant_number` integer\n    ,  `contestant_name` varchar(50) NOT NULL\n    ,  PRIMARY KEY (`contestant_number`)\n    );\n    CREATE TABLE `VOTES` (\n    `vote_id` integer NOT NULL PRIMARY KEY\n    ,  `phone_number` integer NOT NULL\n    ,  `state` varchar(2) NOT NULL\n    ,  `contestant_number` integer NOT NULL\n    ,  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP\n    , \tFOREIGN KEY (`state`) REFERENCES `AREA_CODE_STATE`(`state`)\n    , \tFOREIGN KEY (`contestant_number`) REFERENCES `CONTESTANTS`(`contestant_number`)\n    );\n    CREATE INDEX \"idx_VOTES_idx_votes_phone_number\" ON \"VOTES\" (`phone_number`);\n    PRAGMA foreign_keys=OFF;\n    BEGIN TRANSACTION;\n    CREATE TABLE `AREA_CODE_STATE` (\n    `area_code` integer NOT NULL\n    ,  `state` varchar(2) NOT NULL\n    ,  PRIMARY KEY (`area_code`)\n    );\n",
    "world_1": "\n    [\n        {\n            \"col_data\": [\n                {\n                    \"column_name\": \"ID\",\n                    \"data_type\": \"integer\",\n                    \"default_column_name\": \"ID\",\n                    \"default_value\": null,\n                    \"not_null\": 1,\n                    \"primary_key\": 1\n                },\n                {\n                    \"column_name\": \"Name\",\n                    \"data_type\": \"char(35)\",\n                    \"default_column_name\": \"Name\",\n                    \"default_value\": \"''\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"CountryCode\",\n                    \"data_type\": \"char(3)\",\n                    \"default_column_name\": \"CountryCode\",\n                    \"default_value\": \"''\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"District\",\n                    \"data_type\": \"char(20)\",\n                    \"default_column_name\": \"District\",\n                    \"default_value\": \"''\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"Population\",\n                    \"data_type\": \"integer\",\n                    \"default_column_name\": \"Population\",\n                    \"default_value\": \"'0'\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                }\n            ],\n            \"table\": \"city\"\n        },\n        {\n            \"col_data\": [\n                {\n                    \"column_name\": \"name\",\n                    \"data_type\": \"\",\n                    \"default_column_name\": \"name\",\n                    \"default_value\": null,\n                    \"not_null\": 0,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"seq\",\n                    \"data_type\": \"\",\n                    \"default_column_name\": \"seq\",\n                    \"default_value\": null,\n                    \"not_null\": 0,\n                    \"primary_key\": 0\n                }\n            ],\n            \"table\": \"sqlite_sequence\"\n        },\n        {\n            \"col_data\": [\n                {\n                    \"column_name\": \"Code\",\n                    \"data_type\": \"char(3)\",\n                    \"default_column_name\": \"Code\",\n                    \"default_value\": \"''\",\n                    \"not_null\": 1,\n                    \"primary_key\": 1\n                },\n                {\n                    \"column_name\": \"Name\",\n                    \"data_type\": \"char(52)\",\n                    \"default_column_name\": \"Name\",\n                    \"default_value\": \"''\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"Continent\",\n                    \"data_type\": \"text\",\n                    \"default_column_name\": \"Continent\",\n                    \"default_value\": \"'Asia'\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"Region\",\n                    \"data_type\": \"char(26)\",\n                    \"default_column_name\": \"Region\",\n                    \"default_value\": \"''\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"SurfaceArea\",\n                    \"data_type\": \"float(10,2)\",\n                    \"default_column_name\": \"SurfaceArea\",\n                    \"default_value\": \"'0.00'\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"IndepYear\",\n                    \"data_type\": \"integer\",\n                    \"default_column_name\": \"IndepYear\",\n                    \"default_value\": \"NULL\",\n                    \"not_null\": 0,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"Population\",\n                    \"data_type\": \"integer\",\n                    \"default_column_name\": \"Population\",\n                    \"default_value\": \"'0'\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"LifeExpectancy\",\n                    \"data_type\": \"float(3,1)\",\n                    \"default_column_name\": \"LifeExpectancy\",\n                    \"default_value\": \"NULL\",\n                    \"not_null\": 0,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"GNP\",\n                    \"data_type\": \"float(10,2)\",\n                    \"default_column_name\": \"GNP\",\n                    \"default_value\": \"NULL\",\n                    \"not_null\": 0,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"GNPOld\",\n                    \"data_type\": \"float(10,2)\",\n                    \"default_column_name\": \"GNPOld\",\n                    \"default_value\": \"NULL\",\n                    \"not_null\": 0,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"LocalName\",\n                    \"data_type\": \"char(45)\",\n                    \"default_column_name\": \"LocalName\",\n                    \"default_value\": \"''\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"GovernmentForm\",\n                    \"data_type\": \"char(45)\",\n                    \"default_column_name\": \"GovernmentForm\",\n                    \"default_value\": \"''\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"HeadOfState\",\n                    \"data_type\": \"char(60)\",\n                    \"default_column_name\": \"HeadOfState\",\n                    \"default_value\": \"NULL\",\n                    \"not_null\": 0,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"Capital\",\n                    \"data_type\": \"integer\",\n                    \"default_column_name\": \"Capital\",\n                    \"default_value\": \"NULL\",\n                    \"not_null\": 0,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"Code2\",\n                    \"data_type\": \"char(2)\",\n                    \"default_column_name\": \"Code2\",\n                    \"default_value\": \"''\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                }\n            ],\n            \"table\": \"country\"\n        },\n        {\n            \"col_data\": [\n                {\n                    \"column_name\": \"CountryCode\",\n                    \"data_type\": \"char(3)\",\n                    \"default_column_name\": \"CountryCode\",\n                    \"default_value\": \"''\",\n                    \"not_null\": 1,\n                    \"primary_key\": 1\n                },\n                {\n                    \"column_name\": \"Language\",\n                    \"data_type\": \"char(30)\",\n                    \"default_column_name\": \"Language\",\n                    \"default_value\": \"''\",\n                    \"not_null\": 1,\n                    \"primary_key\": 2\n                },\n                {\n                    \"column_name\": \"IsOfficial\",\n                    \"data_type\": \"text\",\n                    \"default_column_name\": \"IsOfficial\",\n                    \"default_value\": \"'F'\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                },\n                {\n                    \"column_name\": \"Percentage\",\n                    \"data_type\": \"float(4,1)\",\n                    \"default_column_name\": \"Percentage\",\n                    \"default_value\": \"'0.0'\",\n                    \"not_null\": 1,\n                    \"primary_key\": 0\n                }\n            ],\n            \"table\": \"countrylanguage\"\n        }\n    ]\n",
    "orchestra": "\n    PRAGMA foreign_keys = ON;\n\n\n\n    CREATE TABLE \"conductor\" (\n    \"Conductor_ID\" int,\n    \"Name\" text,\n    \"Age\" int,\n    \"Nationality\" text,\n    \"Year_of_Work\" int,\n    PRIMARY KEY (\"Conductor_ID\")\n    );\n\n    CREATE TABLE \"orchestra\" (\n    \"Orchestra_ID\" int,\n    \"Orchestra\" text,\n    \"Conductor_ID\" int,\n    \"Record_Company\" text,\n    \"Year_of_Founded\" real,\n    \"Major_Record_Format\" text,\n    PRIMARY KEY (\"Orchestra_ID\"),\n    FOREIGN KEY (`Conductor_ID`) REFERENCES `conductor`(`Conductor_ID`)\n    );\n\n    CREATE TABLE \"performance\" (\n    \"Performance_ID\" int,\n    \"Orchestra_ID\" int,\n    \"Type\" text,\n    \"Date\" text,\n    \"Official_ratings_(millions)\" real,\n    \"Weekly_rank\" text,\n    \"Share\" text,\n    PRIMARY KEY (\"Performance_ID\"),\n    FOREIGN KEY (`Orchestra_ID`) REFERENCES `orchestra`(`Orchestra_ID`)\n    );\n\n    CREATE TABLE \"show\" (\n    \"Show_ID\" int,\n    \"Performance_ID\" int,\n    \"If_first_show\" bool,\n    \"Result\" text,\n    \"Attendance\" real,\n    FOREIGN KEY (`Performance_ID`) REFERENCES `performance`(`Performance_ID`)\n    );\n",
    "network_1": "\n    drop table if exists Highschooler;\n    drop table if exists Friend;\n    drop table if exists Likes;\n\n    /* Create the schema for our tables */\n    create table Highschooler(\n        ID int primary key, \n        name text, \n        grade int);\n    create table Friend(\n        student_id int, \n        friend_id int,\n        primary key (student_id,friend_id),\n        foreign key(student_id) references Highschooler(ID),\n        foreign key (friend_id) references Highschooler(ID)\n    );\n    create table Likes(\n        student_id int, \n        liked_id int,\n        primary key (student_id, liked_id),\n            foreign key (liked_id) references Highschooler(ID),\n            foreign key (student_id) references Highschooler(ID)\n    );\n",
    "dog_kennels": "\n    PRAGMA foreign_keys = ON;\n    CREATE TABLE `Breeds` (\n    `breed_code` VARCHAR(10) PRIMARY KEY ,\n    `breed_name` VARCHAR(80)\n    );\n    CREATE TABLE `Charges` (\n    `charge_id` INTEGER PRIMARY KEY ,\n    `charge_type` VARCHAR(10),\n    `charge_amount` DECIMAL(19,4)\n    );\n\n    CREATE TABLE `Sizes` (\n    `size_code` VARCHAR(10) PRIMARY KEY ,\n    `size_description` VARCHAR(80)\n    );\n\n    CREATE TABLE `Treatment_Types` (\n    `treatment_type_code` VARCHAR(10) PRIMARY KEY ,\n    `treatment_type_description` VARCHAR(80)\n    );\n\n    CREATE TABLE `Owners` (\n    `owner_id` INTEGER PRIMARY KEY ,\n    `first_name` VARCHAR(50),\n    `last_name` VARCHAR(50),\n    `street` VARCHAR(50),\n    `city` VARCHAR(50),\n    `state` VARCHAR(20),\n    `zip_code` VARCHAR(20),\n    `email_address` VARCHAR(50),\n    `home_phone` VARCHAR(20),\n    `cell_number` VARCHAR(20)\n    );\n\n    CREATE TABLE `Dogs` (\n    `dog_id` INTEGER PRIMARY KEY ,\n    `owner_id` INTEGER NOT NULL,\n    `abandoned_yn` VARCHAR(1),\n    `breed_code` VARCHAR(10) NOT NULL,\n    `size_code` VARCHAR(10) NOT NULL,\n    `name` VARCHAR(50),\n    `age` VARCHAR(20),\n    `date_of_birth` DATETIME,\n    `gender` VARCHAR(1),\n    `weight` VARCHAR(20),\n    `date_arrived` DATETIME,\n    `date_adopted` DATETIME,\n    `date_departed` DATETIME,\n    FOREIGN KEY (`breed_code` ) REFERENCES `Breeds`(`breed_code` ),\n    FOREIGN KEY (`size_code` ) REFERENCES `Sizes`(`size_code` ),\n    FOREIGN KEY (`owner_id` ) REFERENCES `Owners`(`owner_id` ),\n    FOREIGN KEY (`owner_id` ) REFERENCES `Owners`(`owner_id` )\n    );\n\n    CREATE TABLE `Professionals` (\n    `professional_id` INTEGER PRIMARY KEY ,\n    `role_code` VARCHAR(10) NOT NULL,\n    `first_name` VARCHAR(50),\n    `street` VARCHAR(50),\n    `city` VARCHAR(50),\n    `state` VARCHAR(20),\n    `zip_code` VARCHAR(20),\n    `last_name` VARCHAR(50),\n    `email_address` VARCHAR(50),\n    `home_phone` VARCHAR(20),\n    `cell_number` VARCHAR(20)\n    );\n\n    CREATE TABLE `Treatments` (\n    `treatment_id` INTEGER PRIMARY KEY ,\n    `dog_id` INTEGER NOT NULL,\n    `professional_id` INTEGER NOT NULL,\n    `treatment_type_code` VARCHAR(10) NOT NULL,\n    `date_of_treatment` DATETIME,\n    `cost_of_treatment` DECIMAL(19,4),\n    FOREIGN KEY (`treatment_type_code` ) REFERENCES `Treatment_Types`(`treatment_type_code` ),\n    FOREIGN KEY (`professional_id` ) REFERENCES `Professionals`(`professional_id` ),\n    FOREIGN KEY (`dog_id` ) REFERENCES `Dogs`(`dog_id` )\n    );\n",
    "singer": "\n    PRAGMA foreign_keys = ON;\n\n    CREATE TABLE \"singer\" (\n    \"Singer_ID\" int,\n    \"Name\" text,\n    \"Birth_Year\" real,\n    \"Net_Worth_Millions\" real,\n    \"Citizenship\" text,\n    PRIMARY KEY (\"Singer_ID\")\n    );\n\n    CREATE TABLE \"song\" (\n    \"Song_ID\" int,\n    \"Title\" text,\n    \"Singer_ID\" int,\n    \"Sales\" real,\n    \"Highest_Position\" real,\n    PRIMARY KEY (\"Song_ID\"),\n    FOREIGN KEY (\"Singer_ID\") REFERENCES `singer`(\"Singer_ID\")\n    );\n",
    "real_estate_properties": "\n    PRAGMA foreign_keys = ON;\n\n    CREATE TABLE `Ref_Feature_Types` (\n    `feature_type_code` VARCHAR(20) PRIMARY KEY,\n    `feature_type_name` VARCHAR(80)\n    );\n    CREATE TABLE `Ref_Property_Types` (\n    `property_type_code` VARCHAR(20) PRIMARY KEY,\n    `property_type_description` VARCHAR(80)\n    );\n\n    CREATE TABLE `Other_Available_Features` (\n    `feature_id` INTEGER PRIMARY KEY,\n    `feature_type_code` VARCHAR(20) NOT NULL,\n    `feature_name` VARCHAR(80),\n    `feature_description` VARCHAR(80),\n    FOREIGN KEY (`feature_type_code` ) REFERENCES `Ref_Feature_Types`(`feature_type_code` )\n    );\n\n    CREATE TABLE `Properties` (\n    `property_id` INTEGER PRIMARY KEY,\n    `property_type_code` VARCHAR(20) NOT NULL,\n    `date_on_market` DATETIME,\n    `date_sold` DATETIME,\n    `property_name` VARCHAR(80),\n    `property_address` VARCHAR(255),\n    `room_count` INTEGER,\n    `vendor_requested_price` DECIMAL(19,4),\n    `buyer_offered_price` DECIMAL(19,4),\n    `agreed_selling_price` DECIMAL(19,4),\n    `apt_feature_1` VARCHAR(255),\n    `apt_feature_2` VARCHAR(255),\n    `apt_feature_3` VARCHAR(255),\n    `fld_feature_1` VARCHAR(255),\n    `fld_feature_2` VARCHAR(255),\n    `fld_feature_3` VARCHAR(255),\n    `hse_feature_1` VARCHAR(255),\n    `hse_feature_2` VARCHAR(255),\n    `hse_feature_3` VARCHAR(255),\n    `oth_feature_1` VARCHAR(255),\n    `oth_feature_2` VARCHAR(255),\n    `oth_feature_3` VARCHAR(255),\n    `shp_feature_1` VARCHAR(255),\n    `shp_feature_2` VARCHAR(255),\n    `shp_feature_3` VARCHAR(255),\n    `other_property_details` VARCHAR(255),\n    FOREIGN KEY (`property_type_code` ) REFERENCES `Ref_Property_Types`(`property_type_code` )\n    );\n\n    CREATE TABLE `Other_Property_Features` (\n    `property_id` INTEGER NOT NULL,\n    `feature_id` INTEGER NOT NULL,\n    `property_feature_description` VARCHAR(80),\n    FOREIGN KEY (`feature_id` ) REFERENCES `Other_Available_Features`(`feature_id` ),\n    FOREIGN KEY (`property_id` ) REFERENCES `Properties`(`property_id` )\n    );"
}