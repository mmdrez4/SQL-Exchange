[
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "How many regions do we have?",
        "query": "SELECT count(*) FROM region"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Count the number of regions.",
        "query": "SELECT count(*) FROM region"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Show all distinct region names ordered by their labels.",
        "query": "SELECT DISTINCT region_name FROM region ORDER BY Label"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "What are the different region names, ordered by labels?",
        "query": "SELECT DISTINCT region_name FROM region ORDER BY Label"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "How many parties do we have?",
        "query": "SELECT count(DISTINCT party_name) FROM party"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Count the number of different parties.",
        "query": "SELECT count(DISTINCT party_name) FROM party"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Show the ministers and the time they took and left office, listed by the time they left office.",
        "query": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Who are the ministers, when did they take office, and when did they leave office, ordered by when they left office?",
        "query": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Show the minister who took office after 1961 or before 1959.",
        "query": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Who are the ministers who took office after 1961 or before 1959?",
        "query": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Show all ministers who do not belong to Progress Party.",
        "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Which ministers are not a part of the Progress Party?",
        "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Show all ministers and parties they belong to in descending order of the time they took office.",
        "query": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Who are the ministers and what parties do they belong to, listed descending by the times they took office?",
        "query": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Return the minister who left office at the latest time.",
        "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Which minister left office the latest?",
        "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "List member names and their party names.",
        "query": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "What are the names of members and their corresponding parties?",
        "query": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Show all party names and the number of members in each party.",
        "query": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "How many members are in each party?",
        "query": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "What is the name of party with most number of members?",
        "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Return the name of the party with the most members.",
        "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Show all party names and their region names.",
        "query": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "What are the names of parties and their respective regions?",
        "query": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Show names of parties that does not have any members.",
        "query": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "What are the names of parties that have no members?",
        "query": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Show the member names which are in both the party with id 3 and the party with id 1.",
        "query": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Which member names are shared among members in the party with the id 3 and the party with the id 1?",
        "query": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Show member names that are not in the Progress Party.",
        "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\""
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Which member names corresponding to members who are not in the Progress Party?",
        "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\""
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "How many party events do we have?",
        "query": "SELECT count(*) FROM party_events"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Count the number of party events.",
        "query": "SELECT count(*) FROM party_events"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Show party names and the number of events for each party.",
        "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "How many events are there for each party?",
        "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Show all member names who are not in charge of any event.",
        "query": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "What are the names of members who are not in charge of any events?",
        "query": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "What are the names of parties with at least 2 events?",
        "query": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Return the names of parties that have two or more events.",
        "query": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "What is the name of member in charge of greatest number of events?",
        "query": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Return the name of the member who is in charge of the most events.",
        "query": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "find the event names that have more than 2 records.",
        "query": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Which event names were used more than twice for party events?",
        "query": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2"
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "How many Annual Meeting events happened in the United Kingdom region?",
        "query": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\""
    },
    {
        "dataset": "spider_training",
        "db_id": "party_people",
        "question": "Count the number of Annual Meeting events that took place in the region of the United Kingdom.",
        "query": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\""
    }
]