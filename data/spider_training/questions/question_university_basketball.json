[
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "List all schools and their nicknames in the order of founded year.",
        "query": "SELECT school ,  nickname FROM university ORDER BY founded"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What are the different schools and their nicknames, ordered by their founding years?",
        "query": "SELECT school ,  nickname FROM university ORDER BY founded"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "List all public schools and their locations.",
        "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What are the public schools and what are their locations?",
        "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "When was the school with the largest enrollment founded?",
        "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Return the founded year for the school with the largest enrollment.",
        "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Find the founded year of the newest non public school.",
        "query": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What is the founded year of the non public school that was founded most recently?",
        "query": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "How many schools are in the basketball match?",
        "query": "SELECT count(DISTINCT school_id) FROM basketball_match"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Count the number of schools that have had basketball matches.",
        "query": "SELECT count(DISTINCT school_id) FROM basketball_match"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What is the highest acc percent score in the competition?",
        "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Return the highest acc percent across all basketball matches.",
        "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What is the primary conference of the school that has the lowest acc percent score in the competition?",
        "query": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Return the primary conference of the school with the lowest acc percentage score.",
        "query": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What is the team name and acc regular season score of the school that was founded for the longest time?",
        "query": "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Return the name of the team and the acc during the regular season for the school that was founded the earliest.",
        "query": "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Find the location and all games score of the school that has Clemson as its team name.",
        "query": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What are the all games score and location of the school called Clemson?",
        "query": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What are the average enrollment size of the universities that are founded before 1850?",
        "query": "SELECT avg(enrollment) FROM university WHERE founded  <  1850"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Return the average enrollment of universities founded before 1850.",
        "query": "SELECT avg(enrollment) FROM university WHERE founded  <  1850"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Show the enrollment and primary_conference of the oldest college.",
        "query": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What are the enrollment and primary conference for the university which was founded the earliest?",
        "query": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What is the total and minimum enrollment of all schools?",
        "query": "SELECT sum(enrollment) ,  min(enrollment) FROM university"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Return the total and minimum enrollments across all schools.",
        "query": "SELECT sum(enrollment) ,  min(enrollment) FROM university"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Find the total student enrollment for different affiliation type schools.",
        "query": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What are the total enrollments of universities of each affiliation type?",
        "query": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "How many schools do not participate in the basketball match?",
        "query": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Count the number of universities that do not participate in the baketball match.",
        "query": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Find the schools that were either founded after 1850 or public.",
        "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What are the schools that were either founded before 1850 or are public?",
        "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Find how many different affiliation types there are.",
        "query": "SELECT count(DISTINCT affiliation) FROM university"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Count the number of different affiliation types.",
        "query": "SELECT count(DISTINCT affiliation) FROM university"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Find how many school locations have the word 'NY'.",
        "query": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\""
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "How many universities have a location that contains NY?",
        "query": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\""
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Find the team names of the universities whose enrollments are smaller than the average enrollment size.",
        "query": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What are the names of teams from universities that have a below average enrollment?",
        "query": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Find the number of universities that have over a 20000 enrollment size for each affiliation type.",
        "query": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What are the different affiliations, and how many schools with each have an enrollment size of above 20000?",
        "query": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type.",
        "query": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?",
        "query": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What is the maximum enrollment across all schools?",
        "query": "SELECT max(Enrollment) FROM university"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "Return the maximum enrollment across all schools.",
        "query": "SELECT max(Enrollment) FROM university"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "List all information regarding the basketball match.",
        "query": "SELECT * FROM basketball_match"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What is all the information about the basketball match?",
        "query": "SELECT * FROM basketball_match"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "List names of all teams in the basketball competition, ordered by all home scores in descending order.",
        "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC"
    },
    {
        "dataset": "spider_training",
        "db_id": "university_basketball",
        "question": "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?",
        "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC"
    }
]