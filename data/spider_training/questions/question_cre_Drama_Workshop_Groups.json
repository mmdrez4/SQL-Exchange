[
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "How many bookings do we have?",
        "query": "SELECT count(*) FROM BOOKINGS"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Count the total number of bookings made.",
        "query": "SELECT count(*) FROM BOOKINGS"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "List the order dates of all the bookings.",
        "query": "SELECT Order_Date FROM BOOKINGS"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the order date of each booking?",
        "query": "SELECT Order_Date FROM BOOKINGS"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Show all the planned delivery dates and actual delivery dates of bookings.",
        "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the planned delivery date and actual delivery date for each booking?",
        "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "How many customers do we have?",
        "query": "SELECT count(*) FROM CUSTOMERS"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Count the number of customers recorded.",
        "query": "SELECT count(*) FROM CUSTOMERS"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the phone and email for customer Harold?",
        "query": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the phone number and email address of customer \"Harold\".",
        "query": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Show all the Store_Name of drama workshop groups.",
        "query": "SELECT Store_Name FROM Drama_Workshop_Groups"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the store names of drama workshop groups?",
        "query": "SELECT Store_Name FROM Drama_Workshop_Groups"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Show the minimum, average, maximum order quantity of all invoices.",
        "query": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the minimum, average, and maximum quantities ordered? Check all the invoices.",
        "query": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the distinct payment method codes in all the invoices?",
        "query": "SELECT DISTINCT payment_method_code FROM INVOICES"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Show me the distinct payment method codes from the invoice record.",
        "query": "SELECT DISTINCT payment_method_code FROM INVOICES"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the description of the marketing region China?",
        "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the marketing region description of China?",
        "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Show all the distinct product names with price higher than the average.",
        "query": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the distinct names of the products that cost more than the average?",
        "query": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the name of the most expensive product?",
        "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Tell me the name of the most pricy product.",
        "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "List all product names in ascending order of price.",
        "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Sort the names of products in ascending order of their price.",
        "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the phone number of the performer Ashley?",
        "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the phone number of performer \"Ashley\".",
        "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Show all payment method codes and the number of orders for each code.",
        "query": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "List the distinct payment method codes with the number of orders made",
        "query": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the payment method code used by the most orders?",
        "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the payment method that is used the most often in all the invoices. Give me its code.",
        "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Which city is the address of the store named \"FJA Filming\" located in?",
        "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the city the store named \"FJA Filming\" is in.",
        "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the states or counties of the address of the stores with marketing region code \"CA\"?",
        "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the states or counties where the stores with marketing region code \"CA\" are located.",
        "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the name of the marketing region that the store Rob Dinning belongs to?",
        "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Return the name of the marketing region the store Rob Dinning is located in.",
        "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the descriptions of the service types with product price above 100?",
        "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Give me the descriptions of the service types that cost more than 100.",
        "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the description, code and the corresponding count of each service type?",
        "query": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "List the description, code and the number of services for each service type.",
        "query": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the description and code of the type of service that is performed the most often?",
        "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the description and code of the service type that is performed the most times.",
        "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the phones and emails of workshop groups in which services are performed?",
        "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Give me all the phone numbers and email addresses of the workshop groups where services are performed.",
        "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the names of workshop groups in which services with product name \"film\" are performed?",
        "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the names of the workshop groups where services with product name \"film\" are performed.",
        "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the different product names? What is the average product price for each of them?",
        "query": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "For each distinct product name, show its average product price.",
        "query": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the product names with average product price smaller than 1000000?",
        "query": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the product names whose average product price is below 1000000.",
        "query": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the total order quantities of photo products?",
        "query": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"photo\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Compute the total order quantities of the product \"photo\".",
        "query": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"photo\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the order details of the products with price higher than 2000?",
        "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the order detail for the products with price above 2000.",
        "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the actual delivery dates of orders with quantity 1?",
        "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "List the actual delivery date for all the orders with quantity 1",
        "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the order dates of orders with price higher than 1000?",
        "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the order dates of the orders with price above 1000.",
        "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "How many distinct currency codes are there for all drama workshop groups?",
        "query": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the number of distinct currency codes used in drama workshop groups.",
        "query": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the names of the drama workshop groups with address in Feliciaberg city?",
        "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Return the the names of the drama workshop groups that are located in Feliciaberg city.",
        "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the email addresses of the drama workshop groups with address in Alaska state?",
        "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "List the email addresses of the drama workshop groups located in Alaska state.",
        "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Show all cities along with the number of drama workshop groups in each city.",
        "query": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "How many drama workshop groups are there in each city? Return both the city and the count.",
        "query": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the marketing region code that has the most drama workshop groups?",
        "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Which marketing region has the most drama workshop groups? Give me the region code.",
        "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Show all cities where at least one customer lives in but no performer lives in.",
        "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Which cities have at least one customer but no performer?",
        "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the most frequent status of bookings?",
        "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Which status code is the most common of all the bookings?",
        "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the names of the workshop groups that have bookings with status code \"stop\"?",
        "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Which workshop groups have bookings with status code \"stop\"? Give me the names.",
        "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Show the names of all the clients with no booking.",
        "query": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the names of the clients who do not have any booking?",
        "query": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the average quantities ordered with payment method code \"MasterCard\" on invoices?",
        "query": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Check the invoices record and compute the average quantities ordered with the payment method \"MasterCard\".",
        "query": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\""
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the product ID of the most frequently ordered item on invoices?",
        "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the id of the product ordered the most often on invoices.",
        "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the description of the service type which offers both the photo product and the film product?",
        "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'"
    },
    {
        "dataset": "spider_training",
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Give me the description of the service type that offers not only the photo product but also the film product.",
        "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'"
    }
]